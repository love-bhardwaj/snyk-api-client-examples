declare const _default: {
    listIntegrations: (data: {
        orgId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    addNewIntegration: (data: {
        orgId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    updateIntegration: (data: {
        orgId: string;
        integrationId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    deleteCredentials: (data: {
        orgId: string;
        integrationId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    provisionBrokerToken: (data: {
        orgId: string;
        integrationId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    switchBrokerToken: (data: {
        orgId: string;
        integrationId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    cloneIntegration: (data: {
        orgId: string;
        integrationId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    getIntegrationByType: (data: {
        orgId: string;
        type: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    importProject: (data: {
        orgId: string;
        integrationId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    getImportJobDetails: (data: {
        orgId: string;
        integrationId: string;
        jobId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    getIntegrationSettings: (data: {
        orgId: string;
        integrationId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    updateIntegrationSettings: (data: {
        orgId: string;
        integrationId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
};
export default _default;
