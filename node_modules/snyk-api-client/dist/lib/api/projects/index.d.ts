declare const _default: {
    getAllProjects: (data: {
        orgId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    getSingleProject: (data: {
        orgId: string;
        projectId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    updateAProject: (data: {
        orgId: string;
        projectId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    deleteAProject: (data: {
        orgId: string;
        projectId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    deactivateAProject: (data: {
        orgId: string;
        projectId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    activateAProject: (data: {
        orgId: string;
        projectId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    getAggProjectIssues: (data: {
        orgId: string;
        projectId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    getProjectDepGraph: (data: {
        orgId: string;
        projectId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    listAllIgnores: (data: {
        orgId: string;
        projectId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    retrieveIgnore: (data: {
        orgId: string;
        projectId: string;
        issueId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    addIgnore: (data: {
        orgId: string;
        projectId: string;
        issueId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    replaceIgnores: (data: {
        orgId: string;
        projectId: string;
        ignoreId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    deleteIgnores: (data: {
        orgId: string;
        projectId: string;
        ignoreId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    listAllJiraIssues: (data: {
        orgId: string;
        projectId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    createJiraIssue: (data: {
        orgId: string;
        projectId: string;
        issueId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    listProjectSettings: (data: {
        orgId: string;
        projectId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    updateProjectSettings: (data: {
        orgId: string;
        projectId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    deleteProjectSettings: (data: {
        orgId: string;
        projectId: string;
    }, opts?: import("../../../types/types").ReqOpts) => Promise<import("../../../types/types").ReturnData>;
    moveProject: (data: {
        orgId: string;
        projectId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    addATag: (data: {
        orgId: string;
        projectId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    removeATag: (data: {
        orgId: string;
        projectId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
    applyAttributes: (data: {
        orgId: string;
        projectId: string;
    }, opts: import("../../../types/types").ReqOptsWithBody) => Promise<import("../../../types/types").ReturnData>;
};
export default _default;
